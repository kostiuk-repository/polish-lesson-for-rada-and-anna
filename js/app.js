import { Router } from './core/router.js';
import { API } from './core/api.js'; 
import { DictionaryService } from './services/dictionary.js';
import { SpeechService } from './services/speech.js';
import { StorageService } from './services/storage.js';
import { ModalComponent } from './components/modal.js';
import { CatalogComponent } from './components/catalog.js';
import { LessonComponent } from './components/lesson.js';
import { CategoryComponent } from './components/category.js';

class App {
    constructor() {
        this.api = new API('data/');
        this.dictionary = new DictionaryService(this.api);
        this.speech = new SpeechService();
        this.storage = new StorageService();
        this.modal = new ModalComponent({ dictionary: this.dictionary });
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ID —ç–ª–µ–º–µ–Ω—Ç–∞
        this.rootElement = document.getElementById('page-container');
        
        if (!this.rootElement) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç page-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        this.initApp();
    }

    async initApp() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            await this.initServices();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä
            this.initRouter();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.initEventListeners();
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–æ—É—Ç–µ—Ä
            this.router.start();
            
            console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        }
    }

    async initServices() {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            await this.storage.init?.() || Promise.resolve();
            await this.speech.init?.() || Promise.resolve();
            
            // –°–ª–æ–≤–∞—Ä—å –ø–æ–∫–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
            // await this.dictionary.init();
            
            console.log('üì¶ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å:', error);
        }
    }

    initRouter() {
        const routes = [
            { path: '/', render: () => this.showCatalog() },
            { path: '/categories', render: () => this.showCatalog() },
            { path: '/categories/:categoryId', render: (params) => this.showCategory(params.categoryId) },
            { path: '/lesson/:id', render: (params) => this.showLesson(params.id) },
            { path: '/dictionary', render: () => this.showPlaceholder('–°–ª–æ–≤–∞—Ä—å') },
            { path: '/rules', render: () => this.showPlaceholder('–ü—Ä–∞–≤–∏–ª–∞') },
        ];
        
        this.router = new Router(routes, this.rootElement);
        console.log('üõ£Ô∏è –†–æ—É—Ç–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    initEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–æ–∫ —Ä–æ—É—Ç–µ—Ä–∞
        document.addEventListener('click', e => {
            const link = e.target.closest('a[data-router-link]');
            if (link) {
                e.preventDefault();
                const href = link.getAttribute('href');
                if (href && href.startsWith('#')) {
                    const path = href.substring(1);
                    this.router.navigateTo(path);
                }
            }
        });

        // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        window.addEventListener('error', (e) => {
            console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', e.error);
        });

        window.addEventListener('unhandledrejection', (e) => {
            console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise:', e.reason);
        });
        
        console.log('üëÇ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    showCatalog() {
        console.log('üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥');
        try {
            if (!this.catalogComponent) {
                this.catalogComponent = new CatalogComponent({ 
                    container: this.rootElement, 
                    api: this.api 
                });
            }
            return this.catalogComponent.render(); 
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∫–∞—Ç–∞–ª–æ–≥–∞:', error);
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞');
        }
    }

    showCategory(categoryId) {
        console.log('üìÇ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', categoryId);
        try {
            if (!this.categoryComponent) {
                this.categoryComponent = new CategoryComponent({
                    container: this.rootElement,
                    api: this.api,
                    categoryId: categoryId
                });
            }
            return this.categoryComponent.render();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
        }
    }

    showLesson(lessonId) {
        console.log('üìñ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Ä–æ–∫:', lessonId);
        try {
            if (!this.lessonComponent) {
                this.lessonComponent = new LessonComponent({
                    container: this.rootElement,
                    api: this.api,
                    dictionary: this.dictionary,
                    modal: this.modal,
                    speech: this.speech,
                    storage: this.storage
                });
            }
            return this.lessonComponent.render(); // –ò–∑–º–µ–Ω–µ–Ω–æ —Å loadAndRender –Ω–∞ render
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É—Ä–æ–∫–∞:', error);
            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Ä–æ–∫–∞');
        }
    }
    
    showPlaceholder(pageTitle) {
        console.log('üìÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder:', pageTitle);
        this.rootElement.innerHTML = `
            <div class="container placeholder-page">
                <h1 class="placeholder-title">${pageTitle}</h1>
                <p class="placeholder-text">–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</p>
                <a href="#/" class="btn btn--primary" data-router-link>
                    –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </a>
            </div>
        `;
    }

    showError(message) {
        console.error('üö® –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É:', message);
        this.rootElement.innerHTML = `
            <div class="container error-page">
                <div class="error-message">
                    <h2>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
                    <p>${message}</p>
                    <div class="error-actions">
                        <button onclick="window.location.reload()" class="btn btn--primary">
                            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                        </button>
                        <a href="#/" class="btn btn--outline" data-router-link>
                            –ù–∞ –≥–ª–∞–≤–Ω—É—é
                        </a>
                    </div>
                </div>
            </div>
        `;
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º
    getServices() {
        return {
            api: this.api,
            dictionary: this.dictionary,
            speech: this.speech,
            storage: this.storage,
            modal: this.modal
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    console.log('üåü DOM –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    
    try {
        window.app = new App();
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        window.PolishApp = window.app.getServices();
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –æ—à–∏–±–∫—É –ø—Ä—è–º–æ –≤ HTML
        const container = document.getElementById('page-container');
        if (container) {
            container.innerHTML = `
                <div class="container error-page">
                    <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>
                    <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</p>
                    <p>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.</p>
                    <button onclick="window.location.reload()" class="btn btn--primary">
                        –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </button>
                </div>
            `;
        }
    }
});